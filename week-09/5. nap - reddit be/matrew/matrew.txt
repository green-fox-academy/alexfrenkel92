sow database
use adott cucc
describe table

windows.onload
    akkor foltatja a dolgot, amikor az elozo keresre valasz erkezett
    pl betoltodott az adat az endpoint-rol
    mivel nem az en gepemen lesz, ezert varni kell

onload az onreadystatecange-t helettesiti, mert nem az en gepemen varni
AMUGY FETCH-T erdemes hasznalni

Ezzel itt adunk hozza videot
conn.queryINSERT INTO songs(title, singer, url) VALUES (?, ?, ?),
    [req.body.title, req.body.singer, req.body.singer]

body.parser
    segit a bodybol kiolvasni az adatot

youtube linkben a /watch-t lecserelni embeded-re es valami query-t is???

TELEPITENI KELL:
    BODY-PARSER
    EXPRESS
    MYSQL
    NODEMON

    id, title, artist, url
    duration should be auto generated

    CREATE TABLE tracks(
id INT auto_increment primary key NOT NULL,
title VARCHAR(100) NOT NULL,
artist varchar(200) NOT NULL,
duration int not null,
url varchar(1000) not null);

Kell a harmadik tabla, amiben benne van pl 
    a FAV playlist, hozza 2 szam
    aztan a user letrehozza a NoFAV playlistet, amibe elozo 2, plusz 10 masik szam is a resze

    // loadForm.addEventListener('submit', (e) => {
//     e.preventDefault();

//     function getMatrix(method, url) {
//         return new Promise(() => {
//         const xhr = new XMLHttpRequest();
//         xhr.open(method, url);
//         xhr.send();
//         xhr.onload = (response) =>{
//             if (response.target.status == 200) {
//                 const mainContainer = document.querySelector('.mainContainer');
//                 const posts = JSON.parse(response.target.response);
                
//                 posts.forEach(element => {
//                     const container = document.createElement('div');
//                     container.setAttribute('class', 'postContainer');
//                     const m1 = document.createElement('div');
//                     m1.setAttribute('id', 'm1');
//                     const m2 = document.createElement('div');
//                     m2.setAttribute('id', 'm2');
//                     const m3 = document.createElement('div');
//                     m3.setAttribute('id', 'm3');
//                     const m4 = document.createElement('div');
//                     m4.setAttribute('id', 'm4');
//                     const m5 = document.createElement('div');
//                     m5.setAttribute('id', 'm5');
//                     const m6 = document.createElement('div');
//                     m6.setAttribute('id', 'm6');
//                     const m7 = document.createElement('div');
//                     m7.setAttribute('id', 'm7');
//                     const m8 = document.createElement('div');
//                     m8.setAttribute('id', 'm8');
//                     const m9 = document.createElement('div');
//                     m9.setAttribute('id', 'm9');
                    
//                     m1.innerText = `${element.m1}`;
//                     m2.innerText = `${element.m2}`;
//                     m3.innerText = `${element.m3}`;
//                     m4.innerText = `${element.m4}`;
//                     m5.innerText = `${element.m5}`;
//                     m6.innerText = `${element.m6}`;
//                     m7.innerText = `${element.m7}`;
//                     m8.innerText = `${element.m8}`;
//                     m9.innerText = `${element.m9}`;

//                     container.appendChild(m1);
//                     container.appendChild(m2);
//                     container.appendChild(m3);
//                     container.appendChild(m4);
//                     container.appendChild(m5);
//                     container.appendChild(m6);
//                     container.appendChild(m7);
//                     container.appendChild(m8);
//                     container.appendChild(m9);
//                     mainContainer.appendChild(container);
//                 })
//             }
//         }
//     })
// }
// getMatrix('GET', 'http://localhost:3000/');
// })